[user]
        name = Edr2
        email = ...
[core]
        editor = vim
[alias]
	# Base commands
	# diff     = diff --name-status
	ci         = commit --allow-empty-message
	br         = branch
	co         = checkout
	df         = diff
	lg         = log --abbrev-commit --left-right --name-only
	st         = status --short
	cia        = commit --allow-empty-message --all

	# Stash commands
	sl         = stash list
	sa         = stash apply
	ss         = stash save

	# Show all prfiles
	ls         = !git rev-parse --abbrev-ref HEAD | xargs git ls-tree -r --full-tree --full-name --name-only

	# Push into current remote branch
	pc         = !git rev-parse --abbrev-ref HEAD | xargs git push origin
	pl         = !git rev-parse --abbrev-ref HEAD | xargs git pull origin

	# Show untracked files
	stu        = status --untracked-files=no

	# Show current reference
	ref        = !git symbolic-ref HEAD 2> /dev/null

	# Show current repository name
	name       = !git remote -v | head -n1 | awk '{print $2}'
	user       = !git config --global user.name
	email      = !git config --global user.email

	# Show history
	history    = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short

	# Show git commands
	commands   = help -a

	# Get object type
	type       = cat-file -t

	# Get file info
	info       = cat-file -p

	# Show commit logs
	logs      = !git shortlog --summary | sort --reverse --numeric-sort

	# Show conflicts
	conflicts = !git ls-files --unmerged | cut -f2 | sort -u | xargs grep -El '<<<<<<<|=======|>>>>>>>'

	# Show unmergd files
	unmerged   = !git ls-files --unmerged | cut -f2 | sort -u

	# Show aliases
	aliases    = !git config -l | grep alias | cut -c 7-
	#git config --global --get-regexp alias

	# Find files
	find       = !git ls-files | grep -iE

	# Remove files which have been deleted
	remove     = !git ls-files -z --deleted | xargs -0 git rm

	# Reset origin HEAD
	return     = !git reset ORIG_HEAD

	refuse     = !git reset --hard HEAD

	undo       = !git reset --soft HEAD^

	# Ignore a file
	ignore     = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >> .gitignore

	# Assume a file as unchanged
	assume     = !git update-index --assume-unchanged

	# Unassume a file
	unassume   = !git update-index --no-assume-unchanged

	# Show assumed files
	assumed    = !git ls-files -v | grep ^h | cut -c 3-

	# Pull from remote repository
	fork       = !git config --get remote.origin.url | xargs git pull

	# git remote add remote git@github.com:monolithed/.configure.git
	# git pull remote master

	root       = !pwd -P

	# Remote update (git fetch --all)
	up         = remote update

	# Delete multiple branches
	#git branch -D `git for-each-ref --format="%(refname:short)" refs/heads/...`

	go         = !gitgo

	release    = !git commit -am $1 && git tag -a $1 -m $1 && git push --tags

	rename-tag = !git tag $1 $2 && git tag --delete $2 && git push origin :refs/tags/$2 && git push --tags

  #	revert     = checkout --

	# Replace text for all indexed files
  #	rp         = !git grep --name-only $1 | xargs sed -i '' "s/$1/$2/"

	update-submodules = !git pull --recurse-submodules && git submodule update --recursive

[color]
	diff   = true
	grep   = true
	status = true
	ui     = true

	[color "branch"]
		current = yellow reverse
		local   = yellow
		remote  = green

	[color "diff"]
		meta       = normal
		frag       = magenta bold
		old        = red bold
		new        = blue bold
		whitespace = red reverse

	[color "status"]
		added      = yellow
		changed    = green
		untracked  = cyan
[diff]
	renames  = copy
[log]
	decorate = full
[filter "treatspaces"]
	smudge = unexpand -t4
	clean  = expand -t4
[push]
	default = simple
